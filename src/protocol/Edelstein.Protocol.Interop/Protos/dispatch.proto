syntax = "proto3";

package edelstein.protocol.interop.contracts;

enum DispatchResult {
    OK = 0;
    FAILED = 1;
}

message DispatchRequest {
    bytes packet = 1;
}

message DispatchToServerRequest {
    string server = 1;
    bytes packet = 2;
}

message DispatchToServersRequest {
    map<string, string> tags = 1;
    bytes packet = 2;
}

message DispatchToAllianceRequest {
    int32 alliance = 1;
    bytes packet = 2;
}

message DispatchToGuildRequest {
    int32 guild = 1;
    bytes packet = 2;
}

message DispatchToPartyRequest {
    int32 party = 1;
    bytes packet = 2;
}

message DispatchToCharacterRequest {
    int32 character = 1;
    bytes packet = 2;
}

message DispatchResponse {
    DispatchResult result = 1;
}

message DispatchSubscription {
    string server = 1;
}

message DispatchObject {
    bytes packet = 1;

    optional int32 alliance = 2;
    optional int32 guild = 3;
    optional int32 party = 4;
    optional int32 character = 5;
}