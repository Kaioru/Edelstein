syntax = "proto3";

package edelstein.protocol.interop.contracts;

enum DispatchResult {
    OK = 0;
    FAILED = 1;
}

enum DispatchType {
    BROADCAST = 0;
    MULTICAST = 1;
}

message DispatchRequest {
    bytes packet = 1;
}

message DispatchToServerRequest {
    string server = 1;
    bytes packet = 2;
}

message DispatchToServersRequest {
    map<string, string> tags = 1;
    bytes packet = 2;
}

message DispatchToCharacterRequest {
    int32 target = 1;
    bytes packet = 2;
}

message DispatchToCharactersRequest {
    repeated int32 targets = 1;
    bytes packet = 2;
}

message DispatchResponse {
    DispatchResult result = 1;
}

message DispatchSubscription {
    string server = 1;
}

message DispatchObject {
    DispatchType type = 1;
    repeated int32 targets = 2;

    bytes packet = 3;
}