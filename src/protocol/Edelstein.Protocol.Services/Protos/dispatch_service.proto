syntax = "proto3";

package edelstein.protocol.services.contracts;

enum DispatchServiceResult {
  DISPATCH_SERVICE_RESULT_UNSPECIFIED = 0;
  DISPATCH_SERVICE_RESULT_OK = 1;
  DISPATCH_SERVICE_RESULT_FAILED_UNKNOWN = 2;
}

message DispatchRequest { bytes data = 1; }
message DispatchResponse { DispatchServiceResult result = 1; }

message DispatchToServersRequest {
  bytes data = 1;
  repeated string servers = 2;
}
message DispatchToServersResponse { DispatchServiceResult result = 1; }

message DispatchToCharactersRequest {
  bytes data = 1;
  repeated int32 characters = 2;
}
message DispatchToCharactersResponse { DispatchServiceResult result = 1; }

message DispatchSubscription { string server = 1; }
message DispatchContract {
  bytes data = 1;

  repeated string target_servers = 2;
  repeated int32 target_characters = 3;
}