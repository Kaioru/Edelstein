syntax = "proto3";

package edelstein.protocol.services.contracts.social;

enum InviteServiceResult {
  INVITE_SERVICE_RESULT_UNSPECIFIED = 0;
  INVITE_SERVICE_RESULT_OK = 1;
  INVITE_SERVICE_RESULT_FAILED_UNKNOWN = 2;
  INVITE_SERVICE_RESULT_FAILED_TIMEOUT = 3;
  INVITE_SERVICE_RESULT_FAILED_ALREADY_INVITED = 4;
  INVITE_SERVICE_RESULT_FAILED_NOT_INVITED = 5;
}

enum InviteType {
  INVITE_TYPE_UNSPECIFIED = 0;
  INVITE_TYPE_PARTY = 1;
  INVITE_TYPE_PARTY_APPLY = 2;
}

message InviteContract {
  InviteType type = 1;
  int32 invited = 2;
  int32 inviter = 3;
}

message InviteRegisterRequest { InviteContract invite = 1; }
message InviteRegisterResponse { InviteServiceResult result = 1; }

message InviteDeregisterRequest {
  InviteType type = 1;
  int32 invited = 2;
}
message InviteDeregisterResponse { InviteServiceResult result = 1; }

message InviteDeregisterAllRequest { int32 invited = 1; }
message InviteDeregisterAllResponse { InviteServiceResult result = 1; }

message InviteClaimRequest {
  InviteType type = 1;
  int32 invited = 2;
}
message InviteClaimResponse {
  InviteServiceResult result = 1;
  InviteContract invite = 2;
}